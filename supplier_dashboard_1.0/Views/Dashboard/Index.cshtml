

@using Highsoft.Web.Mvc.Charts
@using Highsoft.Web.Mvc.Charts.Rendering
@using System.Collections
@using supplier_dashboard_1._0.Models;

@{

    Layout = "~/Views/Masterpages/Layout_dashboard.cshtml";
    ViewBag.Title = "Welcome To Supplier Dashboard - Vendor Assistance";

}
@{
    var userID = Convert.ToInt32(Session["user"]);
    string result;
    string result2;
    using (db_vendor entity = new db_vendor())
    {
        result = (from o in entity.user_desc
                  where o.user_descId == userID
                  select o.fullname).FirstOrDefault();

        result2 = (from o in entity.user_desc
                   where o.user_descId == userID
                   select o.company).FirstOrDefault();
    }
    Session["fullname"] = result;

    Session["company"] = result2;
    @Html.Raw(TempData["Message"])

}
<style>
    body {
        font-size: 13px;
    }
</style>
<link href="~/Content/bootstrap.css" rel="stylesheet" />

<div class="text-black-50 text-capitalize text-center">
    <br />
    <h1 style="font-size:30px; margin-top:10px; margin-bottom:50px; font-size:52px;">Welcome to Supplier's Assistance Portal </h1>



</div>
@*<div class="container-fluid">
        @{
            Html.RenderPartial("MonthlySales");
        }
    </div>*@

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>
<!-- Bootstrap Js CDN -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

<style type="text/css">
    /* Include the padding and border in an element's total width and height */
    * {
        box-sizing: border-box;
    }

    /* Remove margins and padding from the list */
    .todo {
        margin: 0;
        padding: 0;
        list-style-type: none;
    }

        /* Style the list items */
        .todo li {
            cursor: pointer;
            position: relative;
            padding: 12px 8px 12px 40px;
            background: #eee;
            font-size: 18px;
            transition: 0.2s;
            /* make the list items unselectable */
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            /* Set all odd list items to a different color (zebra-stripes) */
            .todo li:nth-child(odd) {
                background: #f9f9f9;
            }

            /* Darker background-color on hover */
            .todo li:hover {
                background: #ddd;
            }

            /* When clicked on, add a background color and strike out text */
            .todo li.checked {
                background: #888;
                color: #fff;
                text-decoration: line-through;
            }

                /* Add a "checked" mark when clicked on */
                .todo li.checked::before {
                    content: '';
                    position: absolute;
                    border-color: #fff;
                    border-style: solid;
                    border-width: 0 2px 2px 0;
                    top: 10px;
                    left: 16px;
                    transform: rotate(45deg);
                    height: 15px;
                    width: 7px;
                }

    /* Style the close button */
    .close {
        position: absolute;
        right: 0;
        top: 0;
        padding: 12px 16px 12px 16px;
    }

        .close:hover {
            background-color: #f44336;
            color: white;
        }

    /* Style the header */
    .header {
        background-color: #715e5e;
        padding: 30px 40px;
        color: white;
        text-align: center;
    }

        /* Clear floats after the header */
        .header:after {
            content: "";
            display: table;
            clear: both;
        }

    /* Style the input */
    input {
        margin: 0;
        border: none;
        border-radius: 0;
        width: 75%;
        padding: 10px;
        float: left;
        font-size: 16px;
    }

    /* Style the "Add" button */
    .addBtn {
        padding: 10px;
        width: 25%;
        background: #d9d9d9;
        color: #555;
        float: left;
        text-align: center;
        font-size: 16px;
        cursor: pointer;
        transition: 0.3s;
        border-radius: 0;
    }

        .addBtn:hover {
            background-color: #bbb;
        }
</style>
<div class="form-inline">
    <div id="container" style="float:left; border:#715e5e42 solid;"></div>
    <div id="container2" style="float:right;border:#715e5e42 solid; margin-left: 6.4%;"></div>
</div>

<script>
    Highcharts.chart('container', {
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        title: {
            text: 'Sales of different types of items'
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        accessibility: {
            point: {
                valueSuffix: '%'
            }
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                }
            }
        },
        series: [{
            name: 'Brands',
            colorByPoint: true,
            data: [{
                name: 'Electronics',
                y: 50,
                sliced: true,
                selected: true
            }, {
                name: 'Stationary',
                y: 11.84
            }, {
                name: 'Fitting and Pipe',
                y: 10.85
            }, {
                name: 'Tools and Hardwares',
                y: 4.67
            }, {
                name: 'Spare Parts',
                y: 4.18
            }, {
                name: 'Machinery',
                y: 1.64
            }, {
                name: 'Auto Spare Parts',
                y: 1.6
            }, {
                name: 'Other',
                y: 2.61
            }]
        }]
    });
    Highcharts.chart('container2', {
        chart: {
            plotBackgroundColor: null,
            plotBorderWidth: null,
            plotShadow: false,
            type: 'pie'
        },
        title: {
            text: 'Status of orders '
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        accessibility: {
            point: {
                valueSuffix: '%'
            }
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                }
            }
        },
        series: [{
            name: 'Brands',
            colorByPoint: true,
            data: [{
                name: 'Incomplete',
                y: 25,
                sliced: true,
                selected: true
            }, {
                name: 'Complete',
                y: 11.84
            }, {
                name: 'In Progress',
                y: 10.85
            }]
        }]
    });
</script>
<div class="bottom-panel" style="margin-bottom:10% ;margin-top: 4%; border: #715e5e42 solid;">
    <div id="myDIV" class="header">
        <h2>Suppliers Planner</h2>
        <input type="text" id="myInput" placeholder="Title...">
        <span onclick="newElement()" class="addBtn">Add</span>
    </div>

    <ul id="myUL" class="todo">
        <li id="checkli">Meeting With XXYZ Corporation Procurement Department Head</li>
        <li class="checked" id="checkli">Pay Order 21313na .</li>
        <li id="checkli">Send Order Details to admin</li>
        <li id="checkli">Buy Stock for Order 21343na</li>
        <li id="checkli">Receive Cheque from admin</li>
        <li id="checkli">Deliver Items to Order 21343na</li>
    </ul>
</div>
<script>
    // Create a "close" button and append it to each list item
    var myNodelist = document.querySelectorAll("[id='checkli']");
    var i;
    for (i = 0; i < myNodelist.length; i++) {
        var span = document.createElement("SPAN");
        var txt = document.createTextNode("\u00D7");
        span.className = "close";
        span.appendChild(txt);
        myNodelist[i].appendChild(span);
    }

    // Click on a close button to hide the current list item
    var close = document.getElementsByClassName("close");
    var i;
    for (i = 0; i < close.length; i++) {
        close[i].onclick = function () {
            var div = this.parentElement;
            div.style.display = "none";
        }
    }

    // Add a "checked" symbol when clicking on a list item
    var list = document.getElementsByClassName('todo');
    list.addEventListener('click', function (ev) {
        if (ev.target.tagName === 'LI') {
            ev.target.classList.toggle('checked');
        }
    }, false);

    // Create a new list item when clicking on the "Add" button
    function newElement() {
        var li = document.createElement("li");
        var inputValue = document.getElementById("myInput").value;
        var t = document.createTextNode(inputValue);
        li.appendChild(t);
        if (inputValue === '') {
            alert("You must write something!");
        } else {
            document.getElementById("myUL").appendChild(li);
        }
        document.getElementById("myInput").value = "";

        var span = document.createElement("SPAN");
        var txt = document.createTextNode("\u00D7");
        span.className = "close";
        span.appendChild(txt);
        li.appendChild(span);

        for (i = 0; i < close.length; i++) {
            close[i].onclick = function () {
                var div = this.parentElement;
                div.style.display = "none";
            }
        }
    }
</script>